@page "/menuitems/delete"
@using Microsoft.EntityFrameworkCore
@using GestorCheff.Models
@inject IDbContextFactory<GestorCheff.Data.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>MenuItem</h2>
    <hr />
    @if (menuitem is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@menuitem.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Description</dt>
            <dd class="col-sm-10">@menuitem.Description</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@menuitem.Price</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Category</dt>
            <dd class="col-sm-10">@menuitem.Category</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsAvailable</dt>
            <dd class="col-sm-10">@menuitem.IsAvailable</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ItemType</dt>
            <dd class="col-sm-10">@menuitem.ItemType</dd>
        </dl>
        <EditForm method="post" Model="menuitem" OnValidSubmit="DeleteMenuItem" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(menuitem is null)">Delete</button> |
            <a href="/menuitems">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private MenuItem? menuitem;

    [SupplyParameterFromQuery]
    private long IdItem { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        menuitem = await context.MenuItem.FirstOrDefaultAsync(m => m.IdItem == IdItem);

        if (menuitem is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteMenuItem()
    {
        using var context = DbFactory.CreateDbContext();
        context.MenuItem.Remove(menuitem!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/menuitems");
    }
}
